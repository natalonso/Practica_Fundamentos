library(dplyr)
library(VIM)
library(mice)
library(DMwR2)
library(knitr)
library(kableExtra)
library(htmltools)
library(bsplus)
library(RColorBrewer)
library(GGally)
library(ggplot2)
library(corrplot)
library(vcd)
library(DT)
library(gridExtra)
library(jpeg)
library(car)
library(leaflet)
library(scales)
num_total=nrow(datos)
set.seed(122556) #reproductividad
# 70% para train
indices_train = sample(1:num_total, .7*num_total)
datos_train = datos[indices_train,]
# 15% para test
indices=seq(1:num_total)
indices_test=indices[-indices_train]
indices_test1 = sample(indices_test, .15*num_total)
datos_test = datos[indices_test1,]
# 15% para validacion
indices_validacion=indices[c(-indices_train,-indices_test1)]
datos_validacion=datos[indices_validacion,]
datatable(head(datos_train))
str(datos_train)
summary(datos_train)
datos_train[,-2]
datos_train <- datos_train[,-2]
#datos <- read.csv("C:/Users/natal/OneDrive/Documentos/0_MIS_DOCUMENTOS/2.MÁSTER/2_Curso_2019-2020/Primer_Cuatrimestre/2.Fundamentos_de_Análisis/BloqueIV_Métodos/Práctica final/git/kc_house_data.csv")
datos <- read.csv("C:/Users/Beatriz/Desktop/Máster/1er trimestre/Fundamentos/Parte 4_Métodos de Análisis de datos/Prac_git/kc_house_data.csv")
#datos <- read.csv("C:/Users/susi_/Desktop/R/Practica_Fundamentos_R/Repositorios git/kc_house_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(dplyr)
library(VIM)
library(mice)
library(DMwR2)
library(knitr)
library(kableExtra)
library(htmltools)
library(bsplus)
library(RColorBrewer)
library(GGally)
library(ggplot2)
library(corrplot)
library(vcd)
library(DT)
library(gridExtra)
library(jpeg)
library(car)
library(leaflet)
library(scales)
num_total=nrow(datos)
set.seed(122556) #reproductividad
# 70% para train
indices_train = sample(1:num_total, .7*num_total)
datos_train = datos[indices_train,]
# 15% para test
indices=seq(1:num_total)
indices_test=indices[-indices_train]
indices_test1 = sample(indices_test, .15*num_total)
datos_test = datos[indices_test1,]
# 15% para validacion
indices_validacion=indices[c(-indices_train,-indices_test1)]
datos_validacion=datos[indices_validacion,]
datatable(head(datos_train))
str(datos_train)
summary(datos_train)
datos_train <- datos_train[,-2]
#datos <- read.csv("C:/Users/natal/OneDrive/Documentos/0_MIS_DOCUMENTOS/2.MÁSTER/2_Curso_2019-2020/Primer_Cuatrimestre/2.Fundamentos_de_Análisis/BloqueIV_Métodos/Práctica final/git/kc_house_data.csv")
datos <- read.csv("C:/Users/Beatriz/Desktop/Máster/1er trimestre/Fundamentos/Parte 4_Métodos de Análisis de datos/Prac_git/kc_house_data.csv")
#datos <- read.csv("C:/Users/susi_/Desktop/R/Practica_Fundamentos_R/Repositorios git/kc_house_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(dplyr)
library(VIM)
library(mice)
library(DMwR2)
library(knitr)
library(kableExtra)
library(htmltools)
library(bsplus)
library(RColorBrewer)
library(GGally)
library(ggplot2)
library(corrplot)
library(vcd)
library(DT)
library(gridExtra)
library(jpeg)
library(car)
library(leaflet)
library(scales)
num_total=nrow(datos)
set.seed(122556) #reproductividad
# 70% para train
indices_train = sample(1:num_total, .7*num_total)
datos_train = datos[indices_train,]
# 15% para test
indices=seq(1:num_total)
indices_test=indices[-indices_train]
indices_test1 = sample(indices_test, .15*num_total)
datos_test = datos[indices_test1,]
# 15% para validacion
indices_validacion=indices[c(-indices_train,-indices_test1)]
datos_validacion=datos[indices_validacion,]
datatable(head(datos_train))
str(datos_train)
summary(datos_train)
datos_train <- datos_train[,-2]
View(datos_train)
datos_train$id <- as.factor(datos_train$id)
View(datos_train)
#datos <- read.csv("C:/Users/natal/OneDrive/Documentos/0_MIS_DOCUMENTOS/2.MÁSTER/2_Curso_2019-2020/Primer_Cuatrimestre/2.Fundamentos_de_Análisis/BloqueIV_Métodos/Práctica final/git/kc_house_data.csv")
datos <- read.csv("C:/Users/Beatriz/Desktop/Máster/1er trimestre/Fundamentos/Parte 4_Métodos de Análisis de datos/Prac_git/kc_house_data.csv")
#datos <- read.csv("C:/Users/susi_/Desktop/R/Practica_Fundamentos_R/Repositorios git/kc_house_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(dplyr)
library(VIM)
library(mice)
library(DMwR2)
library(knitr)
library(kableExtra)
library(htmltools)
library(bsplus)
library(RColorBrewer)
library(GGally)
library(ggplot2)
library(corrplot)
library(vcd)
library(DT)
library(gridExtra)
library(jpeg)
library(car)
library(leaflet)
library(scales)
num_total=nrow(datos)
set.seed(122556) #reproductividad
# 70% para train
indices_train = sample(1:num_total, .7*num_total)
datos_train = datos[indices_train,]
# 15% para test
indices=seq(1:num_total)
indices_test=indices[-indices_train]
indices_test1 = sample(indices_test, .15*num_total)
datos_test = datos[indices_test1,]
# 15% para validacion
indices_validacion=indices[c(-indices_train,-indices_test1)]
datos_validacion=datos[indices_validacion,]
datatable(head(datos_train))
str(datos_train)
summary(datos_train)
datos_train <- datos_train[,-2]
datos_train$id <- as.factor(datos_train$id)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
datos_train$log_price<- log10(datos_train$price)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=log_price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
#datos <- read.csv("C:/Users/natal/OneDrive/Documentos/0_MIS_DOCUMENTOS/2.MÁSTER/2_Curso_2019-2020/Primer_Cuatrimestre/2.Fundamentos_de_Análisis/BloqueIV_Métodos/Práctica final/git/kc_house_data.csv")
datos <- read.csv("C:/Users/Beatriz/Desktop/Máster/1er trimestre/Fundamentos/Parte 4_Métodos de Análisis de datos/Prac_git/kc_house_data.csv")
#datos <- read.csv("C:/Users/susi_/Desktop/R/Practica_Fundamentos_R/Repositorios git/kc_house_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(dplyr)
library(VIM)
library(mice)
library(DMwR2)
library(knitr)
library(kableExtra)
library(htmltools)
library(bsplus)
library(RColorBrewer)
library(GGally)
library(ggplot2)
library(corrplot)
library(vcd)
library(DT)
library(gridExtra)
library(jpeg)
library(car)
library(leaflet)
library(scales)
num_total=nrow(datos)
set.seed(122556) #reproductividad
# 70% para train
indices_train = sample(1:num_total, .7*num_total)
datos_train = datos[indices_train,]
# 15% para test
indices=seq(1:num_total)
indices_test=indices[-indices_train]
indices_test1 = sample(indices_test, .15*num_total)
datos_test = datos[indices_test1,]
# 15% para validacion
indices_validacion=indices[c(-indices_train,-indices_test1)]
datos_validacion=datos[indices_validacion,]
datatable(head(datos_train))
str(datos_train)
summary(datos_train)
datos_train <- datos_train[,-2]
datos_train$id <- as.factor(datos_train$id)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
datos_train$log_price<- log10(datos_train$price)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=log_price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
table(datos_train$bedrooms)
class(datos_train$bedrooms)
p1<-ggplot(datos_train, aes(x=bedrooms)) + geom_histogram(colour="black", bins =30,fill="tomato")
p2<-ggplot(datos_train, aes(x=as.factor(bedrooms), y=log_price, fill=as.factor(bedrooms))) + geom_boxplot()+
labs(x="bedrooms")+theme(legend.position="none")
grid.arrange(p1, p2, nrow = 1)
table(datos_train$bathrooms)
datos_train$bathrooms_group <- cut(datos_train$bathrooms,breaks = c(-1,0.25,1,2,3,4,5,6,7,8),labels=c(0,1,2,3,4,5,6,7,8))
datos_train$bathrooms_group <- as.numeric(datos_train$bathrooms_group)
table(datos_train$bathrooms_group)
#Dibujamos cómo queda agrupada enfrentada con la variable "price" ya transformada:
ggplot(datos_train, aes(x=as.factor(datos_train$bathrooms_group), y=log_price, fill=as.factor(datos_train$bathrooms_group))) + geom_boxplot()+
labs(x="bathrooms_group")+theme(legend.position="none")
p5<-ggplot(datos_train, aes(x=sqft_living)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
p6<-ggplot(datos_train, aes(sqft_living, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "red") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p5,p6, nrow=1)
datos_train$log_sqft_living<- log10(datos_train$sqft_living)
#options(scipen=999)
#options(repr.plot.width=6, repr.plot.height=3,align="center")
p5.1 <- ggplot(datos_train, aes(x=log_sqft_living)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
p6.1 <- ggplot(datos_train, aes(log_sqft_living, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "red") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p5.1,p6.1, nrow=1)
p7<-ggplot(datos_train, aes(x=sqft_lot)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="tomato")
p8<-ggplot(datos_train, aes(sqft_lot, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "blue") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p7,p8, nrow=1)
table(datos_train$floors)
p9<-ggplot(datos_train, aes(x=floors)) + geom_histogram(colour="black", bins =30,fill="tomato")
p10<-ggplot(datos_train, aes(x=as.factor(floors), y=log_price, fill=as.factor(floors))) + geom_boxplot()+
labs(x="floors")+theme(legend.position="none")
grid.arrange(p9,p10, nrow=1)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_basement)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
#datos_train$sqft_basement_cat <- as.numeric(datos_train$sqft_basement)
datos_train$sqft_basement_cat <- cut(datos_train$sqft_basement,breaks = c(-1,0,6000),labels=c(0,1))
table(datos_train$sqft_basement_cat)
ggplot(datos_train, aes(x=log_price, fill= as.factor(sqft_basement_cat))) + geom_density(alpha=.3)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_living15)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_lot15)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
datos_train$waterfront<-as.factor(datos_train$waterfront)
table(datos_train$waterfront)
ggplot(datos_train, aes(x=log_price, fill=as.factor(waterfront))) + geom_histogram(binwidth=0.1, alpha=.5, position="identity")
datos_train$view<-as.factor(datos_train$view)
table(datos_train$view)
p11<-ggplot(datos_train, aes(x=view)) + geom_histogram(colour="black", bins =30,fill="tomato")
p12<-ggplot(datos_train, aes(x=as.factor(view), y=log_price, fill=as.factor(view))) + geom_boxplot()+
labs(x="view")+theme(legend.position="none")
grid.arrange(p11,p12, nrow=1)
View(datos_train)
#datos <- read.csv("C:/Users/natal/OneDrive/Documentos/0_MIS_DOCUMENTOS/2.MÁSTER/2_Curso_2019-2020/Primer_Cuatrimestre/2.Fundamentos_de_Análisis/BloqueIV_Métodos/Práctica final/git/kc_house_data.csv")
datos <- read.csv("C:/Users/Beatriz/Desktop/Máster/1er trimestre/Fundamentos/Parte 4_Métodos de Análisis de datos/Prac_git/kc_house_data.csv")
#datos <- read.csv("C:/Users/susi_/Desktop/R/Practica_Fundamentos_R/Repositorios git/kc_house_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(dplyr)
library(VIM)
library(mice)
library(DMwR2)
library(knitr)
library(kableExtra)
library(htmltools)
library(bsplus)
library(RColorBrewer)
library(GGally)
library(ggplot2)
library(corrplot)
library(vcd)
library(DT)
library(gridExtra)
library(jpeg)
library(car)
library(leaflet)
library(scales)
num_total=nrow(datos)
set.seed(122556) #reproductividad
# 70% para train
indices_train = sample(1:num_total, .7*num_total)
datos_train = datos[indices_train,]
# 15% para test
indices=seq(1:num_total)
indices_test=indices[-indices_train]
indices_test1 = sample(indices_test, .15*num_total)
datos_test = datos[indices_test1,]
# 15% para validacion
indices_validacion=indices[c(-indices_train,-indices_test1)]
datos_validacion=datos[indices_validacion,]
datatable(head(datos_train))
str(datos_train)
summary(datos_train)
datos_train <- datos_train[,-2]
datos_train$id <- as.factor(datos_train$id)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
datos_train$log_price<- log10(datos_train$price)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=log_price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
table(datos_train$bedrooms)
class(datos_train$bedrooms)
p1<-ggplot(datos_train, aes(x=bedrooms)) + geom_histogram(colour="black", bins =30,fill="tomato")
p2<-ggplot(datos_train, aes(x=as.factor(bedrooms), y=log_price, fill=as.factor(bedrooms))) + geom_boxplot()+
labs(x="bedrooms")+theme(legend.position="none")
grid.arrange(p1, p2, nrow = 1)
table(datos_train$bathrooms)
datos_train$bathrooms_group <- cut(datos_train$bathrooms,breaks = c(-1,0.25,1,2,3,4,5,6,7,8),labels=c(0,1,2,3,4,5,6,7,8))
datos_train$bathrooms_group <- as.numeric(datos_train$bathrooms_group)
table(datos_train$bathrooms_group)
#Dibujamos cómo queda agrupada enfrentada con la variable "price" ya transformada:
ggplot(datos_train, aes(x=as.factor(datos_train$bathrooms_group), y=log_price, fill=as.factor(datos_train$bathrooms_group))) + geom_boxplot()+
labs(x="bathrooms_group")+theme(legend.position="none")
p5<-ggplot(datos_train, aes(x=sqft_living)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
p6<-ggplot(datos_train, aes(sqft_living, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "red") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p5,p6, nrow=1)
datos_train$log_sqft_living<- log10(datos_train$sqft_living)
#options(scipen=999)
#options(repr.plot.width=6, repr.plot.height=3,align="center")
p5.1 <- ggplot(datos_train, aes(x=log_sqft_living)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
p6.1 <- ggplot(datos_train, aes(log_sqft_living, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "red") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p5.1,p6.1, nrow=1)
p7<-ggplot(datos_train, aes(x=sqft_lot)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="tomato")
p8<-ggplot(datos_train, aes(sqft_lot, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "blue") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p7,p8, nrow=1)
table(datos_train$floors)
p9<-ggplot(datos_train, aes(x=floors)) + geom_histogram(colour="black", bins =30,fill="tomato")
p10<-ggplot(datos_train, aes(x=as.factor(floors), y=log_price, fill=as.factor(floors))) + geom_boxplot()+
labs(x="floors")+theme(legend.position="none")
grid.arrange(p9,p10, nrow=1)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_basement)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
#datos_train$sqft_basement_cat <- as.numeric(datos_train$sqft_basement)
datos_train$sqft_basement_cat <- cut(datos_train$sqft_basement,breaks = c(-1,0,6000),labels=c(0,1))
table(datos_train$sqft_basement_cat)
ggplot(datos_train, aes(x=log_price, fill= as.factor(sqft_basement_cat))) + geom_density(alpha=.3)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_living15)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_lot15)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
datos_train$waterfront<-as.factor(datos_train$waterfront)
table(datos_train$waterfront)
ggplot(datos_train, aes(x=log_price, fill=as.factor(waterfront))) + geom_histogram(binwidth=0.1, alpha=.5, position="identity")
datos_train$view<-as.factor(datos_train$view)
table(datos_train$view)
p11<-ggplot(datos_train, aes(x=view)) + geom_histogram(colour="black", bins =30,fill="tomato")
p12<-ggplot(datos_train, aes(x=as.factor(view), y=log_price, fill=as.factor(view))) + geom_boxplot()+
labs(x="view")+theme(legend.position="none")
# DA ERROR POR EL FACTOR!!
#grid.arrange(p11,p12, nrow=1)
datos_train_model$condition<-as.factor(datos_train_model$condition)
View(datos_train)
#datos <- read.csv("C:/Users/natal/OneDrive/Documentos/0_MIS_DOCUMENTOS/2.MÁSTER/2_Curso_2019-2020/Primer_Cuatrimestre/2.Fundamentos_de_Análisis/BloqueIV_Métodos/Práctica final/git/kc_house_data.csv")
datos <- read.csv("C:/Users/Beatriz/Desktop/Máster/1er trimestre/Fundamentos/Parte 4_Métodos de Análisis de datos/Prac_git/kc_house_data.csv")
#datos <- read.csv("C:/Users/susi_/Desktop/R/Practica_Fundamentos_R/Repositorios git/kc_house_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(dplyr)
library(VIM)
library(mice)
library(DMwR2)
library(knitr)
library(kableExtra)
library(htmltools)
library(bsplus)
library(RColorBrewer)
library(GGally)
library(ggplot2)
library(corrplot)
library(vcd)
library(DT)
library(gridExtra)
library(jpeg)
library(car)
library(leaflet)
library(scales)
num_total=nrow(datos)
set.seed(122556) #reproductividad
# 70% para train
indices_train = sample(1:num_total, .7*num_total)
datos_train = datos[indices_train,]
# 15% para test
indices=seq(1:num_total)
indices_test=indices[-indices_train]
indices_test1 = sample(indices_test, .15*num_total)
datos_test = datos[indices_test1,]
# 15% para validacion
indices_validacion=indices[c(-indices_train,-indices_test1)]
datos_validacion=datos[indices_validacion,]
datatable(head(datos_train))
str(datos_train)
summary(datos_train)
datos_train <- datos_train[,-2]
datos_train$id <- as.factor(datos_train$id)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
datos_train$log_price<- log10(datos_train$price)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=log_price)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
table(datos_train$bedrooms)
class(datos_train$bedrooms)
p1<-ggplot(datos_train, aes(x=bedrooms)) + geom_histogram(colour="black", bins =30,fill="tomato")
p2<-ggplot(datos_train, aes(x=as.factor(bedrooms), y=log_price, fill=as.factor(bedrooms))) + geom_boxplot()+
labs(x="bedrooms")+theme(legend.position="none")
grid.arrange(p1, p2, nrow = 1)
table(datos_train$bathrooms)
datos_train$bathrooms_group <- cut(datos_train$bathrooms,breaks = c(-1,0.25,1,2,3,4,5,6,7,8),labels=c(0,1,2,3,4,5,6,7,8))
datos_train$bathrooms_group <- as.numeric(datos_train$bathrooms_group)
table(datos_train$bathrooms_group)
#Dibujamos cómo queda agrupada enfrentada con la variable "price" ya transformada:
ggplot(datos_train, aes(x=as.factor(datos_train$bathrooms_group), y=log_price, fill=as.factor(datos_train$bathrooms_group))) + geom_boxplot()+
labs(x="bathrooms_group")+theme(legend.position="none")
p5<-ggplot(datos_train, aes(x=sqft_living)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
p6<-ggplot(datos_train, aes(sqft_living, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "red") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p5,p6, nrow=1)
datos_train$log_sqft_living<- log10(datos_train$sqft_living)
#options(scipen=999)
#options(repr.plot.width=6, repr.plot.height=3,align="center")
p5.1 <- ggplot(datos_train, aes(x=log_sqft_living)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="white") + geom_density(alpha=.3, fill="#E1AF00")
p6.1 <- ggplot(datos_train, aes(log_sqft_living, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "red") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p5.1,p6.1, nrow=1)
p7<-ggplot(datos_train, aes(x=sqft_lot)) + geom_histogram(aes(y=..density..), bins=30, colour="black", fill="tomato")
p8<-ggplot(datos_train, aes(sqft_lot, log_price)) +
geom_point(alpha = 0.5) +
geom_smooth(se = F, method = "lm", color = "blue") +
scale_y_continuous(breaks = seq(0,8000000, by = 1000000))
grid.arrange(p7,p8, nrow=1)
table(datos_train$floors)
p9<-ggplot(datos_train, aes(x=floors)) + geom_histogram(colour="black", bins =30,fill="tomato")
p10<-ggplot(datos_train, aes(x=as.factor(floors), y=log_price, fill=as.factor(floors))) + geom_boxplot()+
labs(x="floors")+theme(legend.position="none")
grid.arrange(p9,p10, nrow=1)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_basement)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
#datos_train$sqft_basement_cat <- as.numeric(datos_train$sqft_basement)
datos_train$sqft_basement_cat <- cut(datos_train$sqft_basement,breaks = c(-1,0,6000),labels=c(0,1))
table(datos_train$sqft_basement_cat)
ggplot(datos_train, aes(x=log_price, fill= as.factor(sqft_basement_cat))) + geom_density(alpha=.3)
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_living15)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
options(scipen=999)
options(repr.plot.width=6, repr.plot.height=3,align="center")
ggplot(datos_train, aes(x=sqft_lot15)) + geom_histogram(bins=30, colour="black", fill="#E1AF00")
datos_train$waterfront<-as.factor(datos_train$waterfront)
table(datos_train$waterfront)
ggplot(datos_train, aes(x=log_price, fill=as.factor(waterfront))) + geom_histogram(binwidth=0.1, alpha=.5, position="identity")
datos_train$view<-as.factor(datos_train$view)
table(datos_train$view)
p11<-ggplot(datos_train, aes(x=view)) + geom_histogram(colour="black", bins =30,fill="tomato")
p12<-ggplot(datos_train, aes(x=as.factor(view), y=log_price, fill=as.factor(view))) + geom_boxplot()+
labs(x="view")+theme(legend.position="none")
# DA ERROR POR EL FACTOR!!
#grid.arrange(p11,p12, nrow=1)
datos_train$condition<-as.factor(datos_train$condition)
table(datos_train$condition)
p13<-ggplot(datos_train, aes(x=condition)) + geom_histogram(colour="black", bins =30,fill="tomato")
p14<-ggplot(datos_train, aes(x=as.factor(condition), y=log_price, fill=as.factor(condition))) + geom_boxplot()+
labs(x="condition")+theme(legend.position="none")
grid.arrange(p13,p14, nrow=1)
